import pandas as pd
import matplotlib.pyplot as plt


DF = pd.DataFrame([
    [0.00, 0.34, 0.16, 0.08, -0.02, 0.15, 1.56, -0.64, 0.00, -1.45, 0.13, 0, -0.02, 0, 0.05, 0.18, -0.23, 0.27, 0, -0.20, -0.39, 4.63],
    [0.00, -0.13, 0.27, 0.76, 0.19, 0.56, 0.81, 0.17, 0.00, -1.49, 0.29, 0.00, 0.13, 0.00, 0.00, 0.48, 0.26, 0.46, 0.00, 0.02, -0.11, 4.31],
    [0.00, 0.05, 0.09, -0.21, -0.12, 0.14, 1.21, 0.35, 0.00, -1.29, 0.69, 0.00, 0.44, 0.00, -0.13, -0.28, -0.37, -0.44, -0.00, -0.16, -0.34, 5.04],
    [0.00, 0.23, 0.10, 0.19, -0.01, -0.03, 0.27, -0.94, 0.00, -1.97, -0.03, 0.00, 0.22, 0.00, 0.39, 0.33, 0.19, 0.23, 0.00, 0.03, -0.10, 4.41],
    [0.00, 0.17, 0.00, -0.45, -0.09, -0.48, 0.77, -1.10, 0.00, -2.47, 0.11, 0.00, 0.13, 0.00, 0.29, 0.14, -0.27, 0.07, 0.00, -0.24, -0.40, 5.12],
    [0.00, 0.76, 0.52, 0.80, 0.31, 0.70, 1.66, 0.38, 0.00, -0.99, 0.20, 0.00, -0.10, 0.00, -0.32, 0.26, -0.29, 0.33, 0.00, -0.06, -0.49, 4.08],
    [0.00, -0.82, -0.68, -2.59, -1.26, -1.83, -1.26, -1.90, 0.00, 0.14, -0.17, 0.00, -0.21, 0.00, 0.26, -0.53, -0.45, -0.48, 0.00, -0.33, -0.50, 5.65],
    [0.00, -0.30, -0.68, -2.10, -0.78, -1.75, -1.40, -1.51, 0.00, 0.25, -0.38, 0.00, 0.44, 0.00, 0.55, -0.66, -0.48, -1.02, 0.00, 0.01, 0.00, 4.67],
    [0.00, 0.07, -0.20, -1.59, -0.22, -0.93, -0.79, -0.86, 0.00, -1.45, -0.02, 0.00, 0.81, 0.00, 0.74, -0.40, -0.34, -0.73, 0.00, 0.01, -0.17, 4.87],
    [0.00, -0.55, 0.02, 0.42, -0.31, 0.31, -0.30, 1.15, 0.00, 2.58, 0.01, 0.00, -0.40, 0.00, -0.36, 0.00, -0.12, 0.32, 0.00, -0.10, 0.11, 2.86],
    [0.00, -0.44, 0.10, 0.16, 0.03, 0.54, 0.32, 1.60, 0.00, 2.08, 0.21, 0.00, -0.48, 0.00, -0.94, -0.14, -0.08, 0.30, 0.00, -0.09, -0.05, 3.39],
    [0.00, -0.73, -0.15, -0.09, -0.49, -0.66, 0.05, 1.24, 0.00, 1.82, 0.37, 0.00, -0.14, 0.00, -0.59, -0.33, -0.64, -0.28, 0.00, 0.00, -0.10, 4.30],
    [0.00, -0.71, -0.26, -0.81, -0.26, -0.36, -0.07, 1.66, -0.00, 1.56, 0.55, 0.00, 0.44, 0.00, -0.28, -0.80, -0.67, -0.67, 0.00, -0.32, 0.27, 4.11],
    [0.00, 0.22, 0.57, 1.56, 0.08, 1.44, 1.98, 1.47, 0.00, 0.73, 0.83, 0.00, 0.79, 0.00, 0.36, 0.47, 0.65, 0.41, 0.00, -0.21, 0.03, 2.37],
    [0.00, -0.64, -0.31, -0.71, -0.31, -0.25, 0.50, 0.83, 0.00, 0.29, 0.87, 0.00, 0.83, 0.00, -0.22, -0.67, -0.87, -0.75, 0.00, -0.20, -0.17, 4.31],
    ],
    columns=['k', 's', 't', 'n', 'h', 'm', 'r', 'w', '', 'voiced', 'semivoiced', '', 'small', 'a', 'i', 'u', 'e', 'o', 'N', 'Q', 'R', 'const'],
    # index=['beautiful\n-\ndirty', 'smooth\n-\nraspy', 'bright\n-\ndark', 'fine tuned\n-\nroungh', 'clear\n-\nmuddy', 'pleasant\n-\nunpleasant', 'hard\n-\nsoft', 'thorny\n-\nrounded', 'sharp\n-\ndull', 'heavy\n-\nlight', 'thick\n-\nthin', 'powerful\n-\nweak', 'noisy\n-\nquiet', 'moist\n-\ndry', 'flashy\n-\nsober'],
    index=['きれいな\n-\nきたない', '滑らかな\n-\nざらざらした', '明るい\n-\n暗い', 'きめの細かい\n-\n粗い', '澄んだ\n-\n濁った', '快い\n-\n不快な', 'かたい\n-\nやわらかい', 'とげとげしい\n-\n丸みのある', '鋭い\n-\n鈍い', '重い\n-\n軽い', '太い\n-\n細い', '力強い\n-\n弱々しい', '騒々しい\n-\n静かな', '潤いのある\n-\n乾いた', '派手な\n-\n地味な']
    )


def onomatopoeia2vector(onomatopoeia, label):
    df = pd.DataFrame(DF[onomatopoeia].sum(axis=1), columns=label)
    return df

def visualize(onomatopoeias):
    dfs = onomatopoeia2vector(onomatopoeias[0][0], onomatopoeias[0][1])
    for (onomatopoeia, label) in onomatopoeias[1:]:
        dfs = pd.concat([dfs, onomatopoeia2vector(onomatopoeia, label)], axis=1)
    print(dfs)

    fig = plt.figure(figsize=(25, 9))
    ax = fig.add_subplot(1, 1, 1)
    data = [row.values for (index, row) in dfs.iterrows()]
    ax.boxplot(data, labels=dfs.index)
    plt.show()

if __name__ == '__main__':
    onomatopoeias = [
            [['h', 'u', 'semivoiced', 'R'], ["pu-"]], # car horn
            [['w', 'a', 'N'], ["wan"]], # dog
            [['n', 'small', 'a', 'R'], ["nya-"]], # cat
            [['m', 'o', 'R'], ["mo-"]], # cow
            [['k', 'a', 'R'], ["ka-"]], # crow
            [['m', 'e', 'R'], ["me-"]], # sheep
            [['k', 'voiced', 'i', 'R'], ["gi-"]], # wood creaks
            [['t', 'voiced', 'o', 'N'], ["don"]], # drums, fireworks
            [['h', 'a', 'R'], ["ha-"]], # breathing
            [['k', 'o', 'N'], ["kon"]], # door knock
            [['s', 'voiced', 'small', 'a', 'R'], ["jya-"]], # rain
            # original ?
            [['s', 'small', 'u', 'R'], ["syu-"]], # spray1
            [['s', 'small', 'u', 'Q'], ["syuu"]], # spray2
            [['k', 'a', 'N'], ["kan"]], # hammer
            ]
    visualize(onomatopoeias)
